/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package psp2.vista;

import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import psp2.utilidades.Estadistica;
import psp2.utilidades.Fichero;

/**
 *
 * @author Juan Carlos
 */
public class VistaGrafica extends javax.swing.JFrame {

    File file;

    /**
     * Creates new form VistaGraficaTest
     */
    public VistaGrafica() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tfRutaDirectorio = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btSeleccionarDirectorio = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btCalcularMedia = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbDatos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tfRutaDirectorio.setEditable(false);
        tfRutaDirectorio.setToolTipText("");

        jLabel1.setText("Seleccione la carpeta raiz de su programa:");

        btSeleccionarDirectorio.setText("Seleccionar");
        btSeleccionarDirectorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSeleccionarDirectorioActionPerformed(evt);
            }
        });

        jLabel2.setText("Carpeta Seleccionado:");

        btCalcularMedia.setText("Contar Lineas");
        btCalcularMedia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCalcularMediaActionPerformed(evt);
            }
        });

        tbDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Clase", "Cantidad de Metodos", "Cantidad de Lineas"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbDatos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btSeleccionarDirectorio))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfRutaDirectorio))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btCalcularMedia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(226, 226, 226))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btSeleccionarDirectorio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfRutaDirectorio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btCalcularMedia)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btCalcularMediaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCalcularMediaActionPerformed
        limpiarFormularios();
        if (file != null) {
            List<File> ficheros = Fichero.obtenerListaFicheros(file.getAbsolutePath());
            if (ficheros.isEmpty()) {
                limpiarFormularios();
                JOptionPane.showMessageDialog(rootPane, "No se hayaron archivos", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                int totalLineas = 0;
                int totalMetodos = 0;
                Object[][] datosTabla = new Object[ficheros.size() + 1][3];
                int i = 0;
                for (File fichero : ficheros) {
                    datosTabla[i][0] = fichero.getName();
                    List<String> lineas = Fichero.obtenerLineasFichero(fichero.getAbsolutePath());
                    int numeroLineas = Estadistica.contarLineasClase(lineas);
                    datosTabla[i][2] = numeroLineas;
                    int numeroMetodos = Estadistica.contarMetodosClase(lineas);
                    datosTabla[i][1] = numeroMetodos;
                    totalLineas += numeroLineas;
                    totalMetodos += numeroMetodos;
                    i++;
                }
                datosTabla[i][0] = "Total";
                datosTabla[i][1] = totalMetodos;
                datosTabla[i][2] = totalLineas;
                llenarTabla(datosTabla);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Debe seleccionar un directorio primero", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btCalcularMediaActionPerformed

    private void btSeleccionarDirectorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSeleccionarDirectorioActionPerformed
        JFileChooser jFileChooser = new JFileChooser();
        jFileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int result = jFileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            file = jFileChooser.getSelectedFile();
            tfRutaDirectorio.setText(file.getName());
            limpiarFormularios();
        }
    }//GEN-LAST:event_btSeleccionarDirectorioActionPerformed

    /**
     * metodo usado para mostrar los datos leidos del archivo
     *
     * @param datos
     */
    private void llenarTabla(Object[][] datosTabla) {
        tbDatos.setModel(new javax.swing.table.DefaultTableModel(
                datosTabla,
                new String[]{
                    "Clase", "Cantidad de Metodos", "Cantidad de Lineas"
                }
        ) {
            Class[] types = new Class[]{
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean[]{
                false, false, false
            };

            @Override
            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
    }

    /**
     * metodo usado para limpiar los datos actuales de la tabla, la media y la
     * desviacion
     */
    private void limpiarFormularios() {
        tbDatos.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Clase", "Cantidad de Metodos", "Cantidad de Lineas"
                }
        ) {
            Class[] types = new Class[]{
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean[]{
                false, false, false
            };

            @Override
            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaGrafica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new VistaGrafica().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCalcularMedia;
    private javax.swing.JButton btSeleccionarDirectorio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbDatos;
    private javax.swing.JTextField tfRutaDirectorio;
    // End of variables declaration//GEN-END:variables
}
